---
title: "Coding Notebook"
code-fold: TRUE
code-summary: error message
---

## What is This?

This is a public-facing notebook about what I'm doing, what I'm struggling to do, and what mistakes I've been making.


## Week 1 (May 29 to June 4)

This week, I set up a preliminary `animint2` reference website.

### Learned

- Learned more about the `pkgdown` R package:
  + Began looking into the [`pkgdown` documentation](https://pkgdown.r-lib.org/index.html).
  + Webpages seemed to be generated from `.rmd` files, so I was curious if the package also worked the same way for `.qmd` files. The [answer is no](https://community.rstudio.com/t/how-to-run-quarto-qmd-from-within-package/154711/2).
  + Looked up why `pkgdown` [adds the `docs/` directory into `.gitignore`](https://stackoverflow.com/questions/69507610/unable-to-push-package-website-pkgdown-from-r-to-github). But it's still unclear to me.
  + Noticed that the intro to `pkgdown` page [accidentally uses the word "setting" twice in a row](https://pkgdown.r-lib.org/articles/pkgdown.html).
- Learned more about git:
  + Learned of `gitk`, which I've never used before.
  + Learned about [managing my git credentials in `usethis`](https://usethis.r-lib.org/articles/git-credentials.html).
- Looked up some tips on how to write code comments better. Tips from: [Antonin Januska](https://web.archive.org/web/20201111223912/https://antjanus.com/blog/web-design-tips/best-comment-separator/) and [Ellen Spertus](https://stackoverflow.blog/2021/12/23/best-practices-for-writing-code-comments/).
- Learned that the string `GITHUB_PAT` can be found in the `.github/workflows` directory.
- Learned about documentation managers. There's: [Zeal](https://zealdocs.org/) and [DevDocs](https://devdocs.io/).
- Learned that there are, like, eight test suites. And they automatically run when you make a pull request to the `animint2` repository. That's nice. I'm also learning that the tests take a long time to run---about 45 minutes.
- Turns out that `ripgrep-all` doesn't look through YAML files. I need something like `yq` instead. Why?

### Created

- Created `README.md` from the `README.org` file via the magic of `pandoc`.
- Created a preliminary website and documented how I generated it:
  + For the documentation and code, see `website_setup.Rmd`. Currently have information about building the website.
  + Put the site up online.
- Accidentally made a pull request in `tdhock/animint2`. Should've been `ampurr/animint2` instead. I closed it---be more careful.
- Made a pull request in `ampurr/animint2` but did not initially succeed in closing it due to a test failing. Later, I pushed it anyway, which then threw the website online.
- Successfully set up the website. But there are some errors. Most noticeably: it includes some functions that don't seem to be part of `animint2`. Will need to investigate further.

### Confused

One of the tests---"Test Suite compiler"---failed. Here's the error message:

```{r}
#| eval = FALSE

══ Failed tests ════════════════════════════════════════════════════════════════
── Error ('test-compiler-gist.R:4:3'): animint2gist() returns an object of class 'gist' ──
Error: Error: In non-interactive environments, please set GITHUB_PAT env to a GitHub access token (https://help.github.com/articles/creating-an-access-token-for-command-line-use)
Backtrace:
    ▆
 1. └─animint2::animint2gist(list(p = qplot(1:10)), browse = FALSE) at test-compiler-gist.R:4:2
 2.   └─gistr::gist_create(...)
 3.     ├─gistr:::gist_POST(...)
 4.     │ └─gistr:::cVERB(...)
 5.     │   └─crul::HttpClient$new(url, headers = c(auth, headers), opts = list(...))
 6.     │     └─crul (local) initialize(...)
 7.     └─gistr::gist_auth()

[ FAIL 1 | WARN 0 | SKIP 5 | PASS 756 ]
Error: Error: Test failures
Execution halted
Error: Process completed with exit code 1.
```
This is confusing, since I thought `GITHUB_PAT` was already set with a GitHub Access Token. I was also unaware of the large array of tests that activate when you try to push something. Quite frankly, I'm not sure what they do or what they prevent. It feels different than using `testthat`.

I also don't understand the GitHub workflow stuff. What exactly is GitHub doing?


## Week 2 (June 5 to June 11)

This week, I tried to fix [issue 89](https://github.com/tdhock/animint2/issues/89). I did not succeed.

### Learned

- Learned that the [`roxygen2` package](https://roxygen2.r-lib.org/) generates both the `.Rd` files and part of the `DESCRIPTION` for packages.
- Learned that [`devtools` AUR package](https://aur.archlinux.org/packages/r-devtools) has so so so many dependencies.
- This is real basic, but I re-learned that `bash foo.sh` runs shell scripts. I haven't run one since September of 2022.
- Looked into _Writing R Extensions_, which I was not previously aware existed:
  + Read the [DESCRIPTION file](https://cran.r-project.org/doc/manuals/R-exts.html#The-DESCRIPTION-file) portion.
  + Learned about [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822), a syntax standard for text messages in email. FastMail mentions that [RFC 5322 makes RFC 2822 obsolete](https://www.fastmail.help/hc/en-us/articles/1500000278382-Email-standards), but _Writing_ requests emails be written in RFC 2822 formatting.
- When using Git Bash---i.e. [MinGW](https://mingw.osdn.io/)---and `cd`, I need to swap the backwards slashes for forward slashes. Oddly, the backwards slashes work for some directories but not for others. It took me a while to realize this while debugging.
- Figured out that the `borders()` function is part of `fortify-map.r`. That's why it disappeared when I deleted that R file.
- Learning about bash.
- Learned that all the tidyverse data tidiers will eventually be retired. This includes both `ggplot2::fortify()` and `broom::tidy()`.

### Created

Nothing of value. I created several branches to try and fix the issue and didn't succeed.

- [One branch](https://github.com/tdhock/animint2/tree/89-sp-maptools-dependency) focused on removing the `fortify` functions in `animint2`. This caused several tests to fail. Later, [Toby told me](https://github.com/tdhock/animint2/pull/93#issuecomment-1585976690) that `map_data` is used in several tests and relies on the `fortify` functions.
- As part of a debugging process, [one branch was a copy of the main branch](https://github.com/tdhock/animint2/tree/89-bug-exam-slightly-altered-main-branch) with an additional text document. It was meant to test the GitHub tests. It passed the tests.
- Another branch was meant to debug the branch where I removed the `fortify` functions.

### Failed

My debugging process didn't succeed. Or, at the very least, it didn't succeed in time.

Parts of it were headed in the right direction. After some experimentation, I confirmed that the problem stemmed from my changes to the repository (the removal of the `fortify` functions) and not from either `build.sh` or the GitHub tests. But my debugging was focused on the following error message:

> Error in `FUN(X[[i]], ...)`: numeric 'envir' arg not of length one.

This error message comes from the `ggplot2` side of `animint2`'s code. In some sense, I was looking in the right direction---the `fortify` functions are from the `ggplot2` side of things. But I was focused on figuring out substitutes for `fortify` and failed to notice that the problem was with `map_data`.

### Confused

For some reason, `build.sh` always fails to generate the $\LaTeX$ document correctly, mentioning some problem with the `.Rd` files. Then I think it runs the process again, and the problem disappears. Why?

Why are the tidyverse data tidiers being retired? I can't find any info about that.

`yay -S r-plyr r-reshape2` isn't working and requires "manual intervention." Why? Luckily, this isn't important---`build.sh` runs perfectly fine on Git Bash and therefore I don't actually need to figure out why the `yay` helper is acting this way.


## Week 3 (June 12 to June 18)

This week, I complained a lot. I chatted with Fei, who said that she would take care of [issue 90](https://github.com/tdhock/animint2/issues/90). Thank you, Fei!

### Learned

- First meeting with Toby!
  + `animint2` doesn't compute---all computations are done beforehand, and then `animint2` displays that as an interactive data visualization.
  + Also learned that capital letters go before lowercase letters in terms of alphabetical order. At least according to R.
  + `build.sh`, and some of the GitHub Actions, are meant to emulate CRAN checks.
  + All else being equal, prefer small changes over large changes.
- Looked up [selenium documentation](https://www.selenium.dev/documentation/) in order to figure out if a test case for [issue 90](https://github.com/tdhock/animint2/issues/90) was possible.
- Preliminary research on alt-text for `ggplot2`, graphs, and data visualizations:
  + N. Elmqvist. [Data Visualization for the Blind](https://doi.org/10.1145/3571737). In _Interactions_. 2023.
  + Office for National Statistics. [Alt Text: A Guide to Writing About Statistics](https://style.ons.gov.uk/accessibility/alt-text/).
  + C. Jung and others. [Communicating Visualizations without Visuals](https://arxiv.org/abs/2108.03657). In _ArXiv_. 2021.
- Learned about `rtools`, which is necessary to make R packages in Windows:
  + Learned that `rtools` is not an R package, but [must be installed separately](https://community.rstudio.com/t/errors-in-rtool-installations-install-packages-rtool-package-rtool-is-not-available/35689).
  + Found some [`rtools` documentation](https://cran.r-project.org/bin/windows/Rtools/index.html).
  + Toby sent a link that mentioned `rtools` [needs MikTeX and Inconsolata](https://cran.r-project.org/bin/windows/base/howto-R-4.3.html).
- Discovered the [`rmini` package](https://github.com/yihui/rmini/), which I've been using for testing purposes.
- The _R Packages_ book has [an appendix about `R CMD` checks](https://r-pkgs.org/R-CMD-check.html#documentation), including bug fix suggestions for $\LaTeX$ errors.
- Took a look at [Chapter 12: Packages](https://www.uvm.edu/~tdonovan/RforFledglings/packages.html) in _R for Fledglings_, but it wasn't helpful.
- There's a Stack Overflow question about [$\LaTeX$ errors in R packages](https://stackoverflow.com/questions/10819959/diagnosing-r-package-build-warning-latex-errors-when-creating-pdf-version).

### Created

- Made a comment in [issue 90](https://github.com/tdhock/animint2/issues/90). Fei fixed Big Bug, but Little Bug is left.
- Made a new issue: [issue 96](https://github.com/tdhock/animint2/issues/96), which is about some $\LaTeX$ errors that seem exclusive to me.


## Week 4 (June 19 to June 25)

This week, I tried to set up the reference website again---this time in Toby's repository instead of my fork. This didn't work, so I started tinkering with my fork again.

### Learned

- [Here are the GitHub Docs](https://docs.github.com/en). Look here when you have a question about GitHub.
- Looked up how to get permission to change GitHub Page settings in the `animint2` repository. One [Stack Overflow post](https://stackoverflow.com/questions/40673052/how-to-promote-a-collaborator-to-have-owner-rights) suggested obtaining admin rights. Instead, Toby created an organization for repository and gave us permissions that way.
- Looked up info about the [GitHub Pages API](https://docs.github.com/en/rest/pages).
- Refamiliarized myself with aspects of git that I've never used before:
  + On detached HEADs: [Stack Overflow: How Do I Fix a Detached HEAD?](https://stackoverflow.com/questions/10228760/how-do-i-fix-a-git-detached-head) and [How to Reattach a Detached HEAD](https://stackoverflow.com/questions/47154114/how-to-reattach-a-detached-head-in-git).
  + On undoing merges in git: [Stack Overflow: How Do I Revert All Local Changes?](https://stackoverflow.com/questions/1146973/how-do-i-revert-all-local-changes-in-git-managed-project-to-previous-state) and [How to Undo a Merge](https://stackoverflow.com/questions/42860234/how-to-undo-a-merge-in-github). Here's a [blog post on undoing merges with `git reset`](https://www.git-tower.com/learn/git/faq/undo-git-merge/).
  + [GitHub: Reverting a Pull Request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/reverting-a-pull-request).
- Learned more about GitHub's personal access tokens:
  + [GitHub Docs: Managing Your PATs](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens).
  + [GitHub Docs: Caching Your GitHub credentials in Git](https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git).
  + [Stack Overflow: Where to Store My GitHub PAT?](https://stackoverflow.com/questions/46645843/where-to-store-my-git-personal-access-token).
- Learned a little more about GitHub Actions:
  + You can [choose which GitHub Actions to re-run](https://docs.github.com/en/actions/managing-workflow-runs/re-running-workflows-and-jobs). Nice! When a test fails, I can just rerun that test instead of waiting 45 minutes for everything to run again.
  + [GitHub Docs: About `GITHUB_TOKEN`](https://docs.github.com/en/actions/security-guides/automatic-token-authentication).
  + A [blog post about the `GITHUB_TOKEN` in GitHub Actions](https://dev.to/github/the-githubtoken-in-github-actions-how-it-works-change-permissions-customizations-3cgp).
  + There's [documentation for `usethis::github_token`](https://usethis.r-lib.org/reference/github-token.html).
- There's an error that I often get: `In non-interactive environments, please set GITHUB_PAT env to a GitHub access token`. Where does it come from? After doing a GitHub code search, I figured out that it's from the [`gistr` R package](https://cran.r-project.org/web/packages/gistr/vignettes/gistr.html).

### Created

A mess. I accidentally merged my changes from my fork of `animint2` into the original `animint2` repository. Whoops.


## Week 5 (June 26 to July 2)

This week, I'm setting the website up again. Yay! Toby said that he [wants me to replace the README entirely](https://github.com/animint/animint2/issues/97#issuecomment-1615428430), so that's happening, too.

### Learned

- You know issue 96? The one about $\LaTeX$ errors? I [tried installing Inconsolata](https://github.com/animint/animint2/issues/96#issuecomment-1612444392), but it didn't fix the issue. My Inconsolata font is the variable one from [Google Fonts](https://github.com/google/fonts/tree/main/ofl/inconsolata).
- I wanted to know if it was possible to manually run a GitHub Action thing---that way, I would know if I'm failing a test before I submit a pull request. Turns out [the answer is yes](https://stackoverflow.com/questions/60419257/is-it-possible-to-manually-run-a-github-workflow), but only if I have the `workflow_dispatch` trigger. The workflow in `animint2` doesn't have that trigger, though.
- Learned that the Windows 11 snipping tool [can record videos](https://www.microsoft.com/en-us/windows/learning-center/how-to-record-screen-windows-11).
- Learned how to [trim videos with ffmpeg](https://stackoverflow.com/a/42827058).
- I dunno what it does, but there's this [R Universe thing](https://r-universe.dev). You can search for `animint2` and get information about it.
- Learned that `data()` will generate a list of all of R's [built-in datasets](https://rstats101.com/built-in-datasets-in-r/).
- Learned that I can [generate GitHub-flavored Markdown (GFM) with Quarto](https://quarto.org/docs/output-formats/gfm.html). Here are [Quarto's options for GFM](https://quarto.org/docs/reference/formats/markdown/gfm.html).
- R and `ggplot2` have built-in datasets, and I found the codebooks! [These codebooks are for R](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/). And [these are for `ggplot2`](https://ggplot2.tidyverse.org/reference/index.html#data).

### Created

- Toby created an organization, _animint_, for the `animint2` repository. I did some things with it:
  + I changed the profile picture to a dittered Suki. Improving the world one cat pic at a time.
  + I changed the settings so that we can control things with our personal access tokens (PATs). If you want, go to `Settings > Third-party Access > Personal Access Tokens` to change it back.
  + I generated a PAT for `animint2`.
- Converted `README.md` to `README.qmd`, which will let me do R computations for the website homepage.
- Added the "Differences with other packages" section from `README.org` to the animint2 repo wiki.

### In Progress

- I'm thoroughly updating and cleaning up the `website_setup.Rmd` document.
- I'm editing `README.qmd` to be clearer and more immediately useful. Later, I'll convert it to `README.md` for `pkgdown` to read.


## Week 6 (July 3 to July 9)

Hoping to finish up the website this week. (Editor's note: this didn't happen.) Weird bugs exclusive to me and GitHub-specific problems... I'm behind on my timeline for reasons I didn't anticipate. Good learning experience, though I'm learning about things I didn't anticipated.

### Learned

- Unsurprising, but I learned that you [can't have JavaScript in your GitHub README](https://stackoverflow.com/questions/21340803/embed-javascript-in-github-readme-md). This is generally untrue: it's possible to [embed Javascript in Markdown](https://stackoverflow.com/questions/2754391/embed-javascript-in-markdown).
- For Windows, it's easy to [change the localhost default browser](https://stackoverflow.com/questions/69508787/how-to-change-the-default-browser-opened-for-localhost).
- Remember: in RStudio, use <kbd>Ctrl + Shift + C</kbd> to comment out multiple lines.
- Load a built-in dataset with `data()` and use `View()` to see a dataset more fully.
- Looked up datasets. Found one about [school shootings](https://github.com/washingtonpost/data-school-shootings/tree/master) by the _Washington Post_. Also found the [`worldPop` dataset](https://github.com/Polychart/polychart2/blob/master/example/population.coffee) in `animint2`.
- Looked up the [CRAN List View on probability distributions](https://cran.r-project.org/web/views/Distributions.html).
- For subsetting, see [Advanced R: Subsetting Data](https://adv-r.hadley.nz/subsetting.html#subsetting) and [this post](https://stackoverflow.com/questions/12328056/how-do-i-delete-rows-in-a-data-frame) on deleting rows.
- Some useful links for when I'm simulating data:
  + Use `rep()` to repeat a value some amount of times. [Link](https://stackoverflow.com/a/27472694). [Another link](https://stackoverflow.com/a/3672568). [Third link](https://stackoverflow.com/questions/6432067/create-sequence-of-repeated-values-in-sequence) that suggests other functions.
  + Use `data.frame(vector1, vector2)` to concatenate vectors into columns. [Link](https://stackoverflow.com/a/14624658).

### Created

- Created `vignettes/simple-examples.Rmd` to house the usage examples for the `README` document. Why? Cuz GitHub doesn't allow JavaScript in its READMEs.

### Other Notes

- When using `animint::labs()`, subtitles, tags, and captions don't work.


## Week 7 (July 10 to July 16)

This week, I've continued work on the quick start guide.

### Learned

- Re-reading [chapter 3](https://rcdata.nau.edu/genomic-ml/animint2-manual/Ch03-showSelected.html) and [chapter 4](https://rcdata.nau.edu/genomic-ml/animint2-manual/Ch04-clickSelects.html) of the _Animint2 Manual_.
- Cosma Shalizi's [notes on R Markdown](https://www.stat.cmu.edu/~cshalizi/rmarkdown/). Read this before---it's a useful reference.
- [R Helpful Codes](https://r.helpful.codes/) has a bunch of little R resources and tutorials. _Advanced R_ [mentions `order()`](https://adv-r.hadley.nz/subsetting.html#ordering-integer-subsetting).
- There's a [Stack Overflow post](https://stackoverflow.com/questions/420296/what-are-some-good-books-web-resources-and-projects-for-learning-r) with R Resources, including an [R reference card]() that I've never seen before.
- Some more useful notes for data simulation:
  + `sort()` lets us sort our data. `order()` works, too, and in a more sophisticated way.
  + [`cummax` lets you obtain the largest scalars in your vector](https://stackoverflow.com/a/12600068). It is related to `cumsum()`
  + [Use `rbind() |> c()` to weaver multiple vectors together](https://stackoverflow.com/q/53802352).
  + It's [pretty easy to sample from multiple vectors and then concatenate them](https://stackoverflow.com/a/46314294).
- James Murray has a collection of [R tutorials](https://murraylax.org/rtutorials/), including one on the [grammar of graphics](https://murraylax.org/rtutorials/gog.html).
- Use `[link](#foo-bar)` to link to the `foo-bar` section in a Markdown document. [Link](https://stackoverflow.com/a/16426829).

### Created

- Massaged simulated data until they were useful and looked somewhat real.
- Continued work with `simple-examples.Rmd`, which was renamed `quick-start.Rmd`. The simple examples vignette has transformed into a larger quick start guide.


## Week 8 (July 17 to July 23)

### Learned

- Erik Bernhardsson has an analysis for why [software projects take longer than expected](https://erikbern.com/2019/04/15/why-software-projects-take-longer-than-you-think-a-statistical-model.html). For obvious reasons, it's something I've been thinking about regarding the reference website project.
- Learned (or re-learned) about the `signif()` function, which is useful for rounding and cutting off overly-precise numbers.

### Other Notes

- `animint()` fails to render ggplots that uses `geom_smooth()`.


## Week 9 (July 24 to July 30)

Nothing here yet. Unless you have an [unusual ontology of time](https://iep.utm.edu/time/#SH14a), of course. In that case, something was always here and always will be.