---
title: "animint2 GSOC Examination"
author: "J. Chen"
format: 
  html:
    css: changes.css
number-sections: FALSE
toc: TRUE
toc-location: left
toc-title: "Contents:"
linkcolor: "#043521"
mainfont: Roboto Condensed, sans-serif
monofont: Roboto Mono, monospace
reference-location: margin
cap-location: margin
website:
  cookie-consent: express
knitr:
  opts_chunk: 
    code-overflow: wrap
    echo: TRUE
    cache: FALSE
    autodep: TRUE
    warning: TRUE
---

```{r setup}
#| include: FALSE

library(knitr)        # tidy file conversion
library(dplyr)        # tidy file manipulation
library(readr)        # tidy file reader
library(tibble)       # tidy tables
library(animint2)     # animated ggplot2
library(kableExtra)   # make tables

theme_set(theme_gray() + 
            theme(panel.background = 
                    element_rect(fill = "#f1f3f5")))
```



## Introduction

Hello! If you're reading this, you're probably Toby Dylan Hocking, Faizan Khan, or someone else who's applying to GSOC 2023. (And if you're in the latter group, best of luck!)

Why am I applying to work on `animint2`? In my field of expertise---network psychometrics---an [interactive model of depression](https://ccl.northwestern.edu/netlogo/models/community/Vulnerability_To_Depression) led to the discovery of hysteresis in symptom networks. Later on, this became a crucial component of network theory.^[D. Borsboom. [A network theory of mental disorders](https://onlinelibrary.wiley.com/doi/full/10.1002/wps.20375). _World Psychiatry_. 2017.] So I've become an enthusiast for interactive models and visualizations in science.

If I'm lucky, I hope to spend my summer improving `animint2`. I'm especially interested in writing and editing documentation. But I'm comfortable doing whatever has priority. [Of course, my super top secret reason for doing this is so I can maybe eventually publish a paper with Toby and bump my Erdős number down to a 4. But shhhh. That's just between you and me.]{.aside}

Here's my `.qmd` file, if you'd prefer to look at it directly. And here's my repository.

Lastly, there's been an explosion of AI tools this year. I hereby certify that I haven't used them for any of my writing or code. In fact, I haven't used them at all.

All right. Onto the tests.



## Easy Test: Personalities By Country

The easy test asks us to do an exercise from the [`animint2` Manual](https://rcdata.nau.edu/genomic-ml/animint2-manual/Ch00-preface.html). Or,

> Even better: use animint2 to visualize some data from your domain of expertise.

So let's take a look at some psychometrics.


### Data Wrangling

Many psychological datasets have strict rules regarding their use. Luckily, The Open-Source Psychometrics Project has graced us with [an abundance of personality data](https://openpsychometrics.org/_rawdata/). I've elected to use the Big Five dataset. [The Big Five is otherwise known as the five-factor model of personality.]{.aside} The dataset has data on participants' age, race, and gender (among other things). But for the purposes of this test, I'll limit myself to item responses by country and drop the other data:

```{r only-countries}
b5 <- read_tsv("b5.tsv",
               show_col_types = FALSE)
go_away <- c("race", "age", "engnat", "gender", "hand", "source")
b5c <- b5 |> select(-any_of(go_away))
```

How many countries are there in this dataset, anyway? And what about the number of responses per country? [`"(nu"` is equivalent to `NA`.]{.aside}

```{r country-count}
num_country <- b5c |> count(country, sort = TRUE) |>
  filter(!(country == "(nu"))
num_country
```

That's a lot of countries, and most of them have very few responses. Generalizability is affected if _n_ is too small, so I'm going to somewhat arbitrarily keep the six countries with the largest sample sizes and drop the rest. Sorry, Italy.

```{r six-countries}
six_countries <- b5c |> filter(country %in% c("US", "GB", "IN", "AU", "CA", "PH"))
```

Lastly, the individual item responses aren't especially useful to me. [Individual items are useful for estimating psychometric networks. But as far as I can tell, `animint2` doesn't support them.]{.aside} So I'm going to generate sumscores for each of the five personality factors and use that instead for the interactive visualization.

```{r sumscore-tbl-1}
# add id column
plus_id <- rowid_to_column(six_countries, "id") |> rowwise(id)

# generate columns of sumscores
plus_sumscores <- plus_id |> 
  mutate(extraversion = sum(across(starts_with("E"))),
         neuroticism = sum(across(starts_with("N"))),
         agreeableness = sum(across(starts_with("A"))),
         conscientiousness = sum(across(starts_with("C", ignore.case = FALSE))),
         openness = sum(across(starts_with("O"))),
         )

# remove individual items
sumscores <- plus_sumscores |> 
  select(id, country, extraversion:openness)
```

And now we have our final dataset:

```{r sumscore-tbl-2}
#| column: body-outset-right
sumscores
```


### Big Five Data Viz

Now that our data are cleaned, let's explore.

```{r code2country-tbl}
#| echo: FALSE
#| column: margin

iso2c <- read_csv("iso2country.csv",
                  show_col_types = FALSE)
iso2c_tbl <- kbl(iso2c) |> kable_paper(html_font = "Roboto Condensed",
                                       full_width = FALSE)
iso2c_tbl
```

We have five personality traits and six countries. How do personality traits vary by country?

```{r f-violinize}
# limit redundancy
violinize <- list(geom_violin(
  draw_quantiles = c(0.25, 0.5, 0.75)), 
  coord_flip(),
  labs(x = NULL))
```

```{r oc}
#| column: margin
oc <- sumscores |> 
  ggplot(mapping = aes(x = country, 
                       y = openness))
oc + violinize
```

```{r cc}
#| column: margin
cc <- sumscores |> 
  ggplot(mapping = aes(x = country, 
                       y = conscientiousness))
cc + violinize
```

```{r ec}
#| column: margin
ec <- sumscores |> 
  ggplot(mapping = aes(x = country, 
                       y = extraversion))
ec + violinize
```

```{r ac}
#| column: margin
ac <- sumscores |> 
  ggplot(mapping = aes(x = country, 
                       y = agreeableness))
ac + violinize
```

```{r nc}
#| column: margin
nc <- sumscores |> 
  ggplot(mapping = aes(x = country, 
                       y = neuroticism))
nc + violinize
```

There's some limited differences between personality factors. The distribution of scores for neuroticism is unusually wide, and openness seems to be slightly higher than the other personality factors. I'm not sure why. Maybe it's an artifact of the kinds of people attracted to the website. Personality science isn't my specialty in psychology---I can only speculate.

It's also impressive how similar the scores are between countries. Their median scores do not seriously differ.

Here's another look at at the similarities between test scores: a density plot for agreeableness. In this plot, we can see the literal overlap between the distribution of test scores. [Agreeableness refers to phenomena like the tendency for compliance and altruism.]{.aside} I'll come back to the inter-country overlap later.

```{r density-plot}
#| column: margin
a_density <- sumscores |> 
  ggplot(mapping = aes(x = agreeableness,
                       color = country,
                       fill = country)) +
  geom_density(alpha = 0.1)
a_density
```


### Interacting with Personality

All right. Time for the most relevant part of the test: using `animint()` to showcase my data.

The factors in the five-factor model of personality are meant to be mostly independent from one another.[^2] That partly means we don't expect the factors, when plotted against one another, to have any particularly strong relationships. In contrast, if we obtain a Pearson's _r_ close to 1 or −1, it may be the case that the two factors are actually one.

<!-- footnote -->
[^2]: There are empirical and theoretical reasons to question this, but that's outside the scope of the test. For further reading, see:

    - D. Borsboom. [The attack of the psychometricians](https://link.springer.com/10.1007/s11336-006-1447-6). _Psychometrika._ 2006.
    - D. van der Linden et al. [The general factor of personality](doi.org/10.1016/j.jrp.2010.03.003). _J. Res. Pers._ 2010.

<!-- /footnote -->

What do the data show?

```{r ani-corr}
#| message: FALSE
#| label: fig-personality-us
#| fig-cap: "The US's data seriously overlap with other countries'."

correlations <- sumscores |> 
  ggplot(mapping = aes(x = conscientiousness,
                       y = extraversion,
                       color = country))
corr <- correlations + geom_jitter(alpha = 0.25)

ani_corr <- animint(corr)
ani_corr$first <- list(country = "US")
ani_corr
```

Here, extraversion is plotted against conscientiousness. [Extraversion refers to phenomena like outgoingness, while conscientiousness refers to phenomena like diligence.]{.aside} The United States is the only country currently plotted. Clicking on other countries plots their data and shows that aforementioned overlap between countries. I've also made the data points semi-transparent so the data density is visible.

I haven't bothered to do any statistics. But at first glance, it seems like these data are consistent with the five-factor model. Outliers distort our hypothetical regression line and render $r > 0$, but if we zoom in where the data are most dense, perhaps even that fluke of a pattern will fade.

Let's see if that's true.

```{r ani-corr-zoom}
#| message: FALSE
#| label: fig-personality-ph
#| fig-cap: "There seems to be no relationship between the two factors."
corr_densed <- corr + 
  xlim(20, 40) + 
  ylim(20, 40)

ani_corr_zoom <- animint(corr_densed)
ani_corr_zoom$first <- list(country = "PH")
ani_corr_zoom
```

This time I've opted to show the Philippines, the country with the sparsest data. The data do seem to be pretty patternless. Furthermore, as you add more countries---or just the United States---the discrete nature of the data becomes visible even with jittered points. (The sumscores can only be integers.)

And, of course, it's immediately obvious without jitter. Last interactive scatterplot of the easy test:

```{r ani-corr-discrete}
#| label: fig-personality-discrete
#| fig-cap: "The discrete nature of the Big Five data."

corr_discrete <- correlations +
  geom_point(alpha = 0.25) + 
  xlim(20, 40) + 
  ylim(20, 40)
animint(corr_discrete)
```

Pretty cool! Being able to explore and present this kind of research would be harder without the interactive benefits of `animint2`.


### Sibling Rivalry

The second part of the easy test asks me to

> Show an example of an error that you see when animint2 is loaded/attached at the same time as standard ggplot2.

There's no conflict with just loading the packages:

```{r}
#| eval: FALSE
library(animint2)
library(ggplot2)
```

But R throws up an error message when you run code that uses that syntax. As a quick example, I'll load up a toy dataset and try to generate a bar chart.

```{r cat-tbl}
#| echo: FALSE
cat_pop <- read_csv("meow.csv",
                    show_col_types = FALSE)
```

```{r}
#| eval: FALSE
cat_pop <- read_csv("meow.csv",
                    show_col_types = FALSE)

cat_bar <- ggplot(data = cat_pop, 
                  mapping = aes(cat_name, popularity)) + 
  geom_bar(stat = "identity", color = purple)
cat_bar
```

What happens? 

```{r}
#| eval: FALSE
#| warning: FALSE
Warning: Incompatible methods ("+.gganimint", "+.gg") for "+"
```

In other words, `animint2` and `ggplot2` don't get along because their syntaxes overlap. Unloading or uninstalling one or the other gets rid of the problem and finally gives us our very important kitty bar chart.

```{r bar-cat-pop}
#| echo: FALSE
#| label: fig-cat-popularity
#| fig-cap: "Popularity of cat names on a scale of 1–3."

cat_bar <- ggplot(data = cat_pop, 
                  mapping = aes(cat_name, popularity)) + 
  geom_bar(stat = "identity")
cat_bar
```



## Appendix: Observations {#sec-observations}

If I'm lucky, maybe I'll become the change I want to see.

`animint2` is a fork of `ggplot2`. While playing around with `animint2`, I noticed that this comes with some side effects:

- `ggplot2` has `geom_col()`, but not `animint2`.
- `ggplot2` has `geom_boxplot()`, but not `animint2`.
- An erroneous warning in `geom_violin` [has been fixed](https://github.com/tidyverse/ggplot2/pull/4654) in `ggplot2` but not in `animint2`.
- "`showSelected` does not work with `StatDensity`"---but I haven't been able to find documentation about this anywhere. (Maybe I missed it.)
- Extensions of `ggplot2`, like `patchwork`, don't work for `animint2`.

- multiple plots don't work

- "#| column: margin" and "fig-cap" don't work well together

-"fig-cap" appears differently ?

- "Error: Use of clickSelects and showSelected as aesthetics has been deprecated. Please use as parameters."
- "Warning: showSelected only works with position=identity"

[Chapter 7](https://rcdata.nau.edu/genomic-ml/animint2-manual/Ch07-limitations.html) of the `animint2` Manual is also buggy and moves up by itself.

- Warning: showSelected only works with position=identity, problem: geom1_point_corrdensed

## Appendix: Mistakes

Major Mistakes I made while doing these tests (and then subsequently caught).


### Easy Test

My sumscores were erroneous, but it took me an embarassingly long time to notice and check. I first noticed that the openness sumscores were impossibly high---each sumscore has a ceiling of 50, which openness sumscores exceeded. I believe my mistake was using `c_across()` and then messing up the selection syntax, but I didn't really have the time to experiment and check.