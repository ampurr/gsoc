install.packages(rmarkdown)
install.packages("rmarkdown")
Revo.version
packageDescription("mkl")
installed.packages()
?checkpoint
??checkpoint
install.packages("rmarkdown")
quarto install tool tinytex
tinytex::install_tinytex()
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::check_installed()
tinytex::tinytex_root()
tinytex::is_tinytex()
tinytex::tlmgr_path("add")
tinytex::tinytex_root()
install.packages("wTO")
knitr::opts_chunk$set(echo = FALSE,
cache = FALSE,
autodep = TRUE)
library(knitr)        # file conversion
library(tidyverse)    # data manipulation
library(kableExtra)   # make tables
library(sqldf)        # SQL queries in R
b5 <- read_tsv("b5.tsv")
go_away <- c("race", "age", "engnat", "gender", "hand", "source")
items_country <- b5 |> select(-any_of(go_away))
library(animint2)
#library(ggplot2)
num_country <- ggplot(data = b5, mapping = aes(y = country)) +geom_bar()
#num_country + geom_bar()
#num_country <- sqldf("SELECT x FROM b5")
num_country <- ggplot(data = b5, mapping = aes(y = country)) +geom_bar()
num_country
num_country <- ggplot(data = b5, mapping = aes(x = country)) + geom_bar()
num_country + coord_flip()
#num_country + geom_bar()
#num_country <- sqldf("SELECT x FROM b5")
num_country <- ggplot(data = b5, mapping = aes(x = country)) + geom_bar()
num_country + coord_flip()
#num_country + geom_bar()
#num_country <- sqldf("SELECT x FROM b5")
num_country <- ggplot(data = b5, mapping = aes(x = country)) +
geom_bar() +
coord_flip
num_country <- ggplot(data = b5, mapping = aes(x = country)) + geom_bar()
num_country + coord_flip
num_country <- ggplot(data = b5, mapping = aes(x = country)) + geom_bar() + coord_flip()
num_country
ggsave(test.png, num_country)
ggsave(test.pdf, num_country, "pdf", height = 100, width = 100, units = "in")
ggsave(test.pdf, num_country, "pdf", height = 50, width = 50, units = "in")
ggsave(test.pdf, num_country, "pdf", height = 50, width = 50, units = "in", limitsize = FALSE)
ggsave(test, num_country, "pdf", height = 50, width = 50, units = "in", limitsize = FALSE)
ggsave(filename = "test", num_country, "pdf", height = 50, width = 50, units = "in", limitsize = FALSE)
ggsave(filename = "test.pdf", num_country, "pdf", height = 50, width = 50, units = "in", limitsize = FALSE)
knitr::opts_chunk$set(echo = FALSE,
cache = FALSE,
autodep = TRUE)
library(knitr)        # file conversion
library(tidyverse)    # data manipulation
library(animint2)     # animated ggplot2
library(sqldf)        # SQL queries in R
library(kableExtra)   # make tables
test = stat_count(b5$country)
knitr::opts_chunk$set(echo = FALSE,
cache = FALSE,
autodep = TRUE)
library(knitr)        # file conversion
library(tidyverse)    # data manipulation
library(animint2)     # animated ggplot2
#library(sqldf)        # SQL queries in R
library(kableExtra)   # make tables
b5 <- read_tsv("b5.tsv")
go_away <- c("race", "age", "engnat", "gender", "hand", "source")
items_country <- b5 |> select(-any_of(go_away))
count_country <- n_distinct(items_country$country)
count_country <- n_distinct(items_country$country)
count_country
count_country <- n_distinct(b5$country)
count_country
count_country <- b5 |> n_distinct(country)
count_country <- n_distinct(b5$country)
count_country
num_country <- count(b5$country, sort = TRUE)
num_country <- b5 |> count(country, sort = TRUE)
num_country <- b5 |> count(country, sort = TRUE)
num_country
b5 <- read_tsv("b5.tsv")
go_away <- c("race", "age", "engnat", "gender", "hand", "source")
b5c <- b5 |> select(-any_of(go_away))
count_country <- n_distinct(b5c$country)
count_country
num_country <- b5c |> count(country, sort = TRUE)
num_country
num_country <- b5c |> count(country, sort = TRUE) |>
filter(country == "US")
num_country
num_country <- b5c |> count(country, sort = TRUE) |>
filter(country == -"US")
num_country <- b5c |> count(country, sort = TRUE) |>
filter(country == -("US"))
num_country <- b5c |> count(country, sort = TRUE) |>
filter(country == [-("US")])
num_country <- b5c |> count(country, sort = TRUE) |>
filter[(country == -("US"))]
num_country <- b5c |> count(country, sort = TRUE) |>
filter[-country == "US"]
num_country <- b5c |> count(country, sort = TRUE) |>
filter(-country == "US")
num_country <- b5c |> count(country, sort = TRUE) |>
filter(-[country == "US"])
num_country <- b5c |> count(country, sort = TRUE) |>
filter(!(country == "US"))
num_country <- b5c |> count(country, sort = TRUE) |>
filter(!(country == "US"))
num_country
num_country <- b5c |> count(country, sort = TRUE) |>
filter(!(country == "(nu"))
num_country
num_country
count_country <- n_distinct(b5c$country)
count_country
num_country <- b5c |> count(country, sort = TRUE) |>
filter(!(country == "(nu"))
num_country
num_country <- b5c |> count(country, sort = TRUE) |>
filter(!(country == "(nu"))
num_country
b5 <- read_tsv("b5.tsv")
go_away <- c("race", "age", "engnat", "gender", "hand", "source")
#b5c <- b5 |> select(-any_of(go_away))
b5c <- b5 |> select(!(go_away))
View(b5c)
View(items_country)
View(items_country)
View(items_country)
b5 <- read_tsv("b5.tsv")
go_away <- c("race", "age", "engnat", "gender", "hand", "source")
b5c <- b5 |> select(!(go_away))
test <- filter([1:10])
test <- filter(1:10)
test <- num_country |> filter(1:10)
cat_pop <- read_csv("meow.csv")
cat_pop
cat_pop <- read_csv("meow.csv")
cat_pop
cat_pop
cat_bar <- cat_pop |> geom_col()
cat_bar <- cat_pop |> geom_col(aes(y = "cat name"))
cat_bar <- geom_col(data = cat_pop,
aes(y = "cat name"))
cat_bar <- geom_col(data = cat_pop,
aes(y = "cat name"))
cat_bar
cat_bar <- geom_col(data = cat_pop,
aes(x = "cat name"))
cat_bar
cat_bar <- ggplot(data = cat_pop, mapping = aes(y = "cat name")) +
geom_col()
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = "cat name")) +
geom_col()
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat name)) +
View(cat_pop)
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = "cat name")) +
geom_col()
cat_pop <- read_csv("meow.csv")
cat_pop
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name)) +
geom_col()
knitr::opts_chunk$set(echo = FALSE,
cache = FALSE,
autodep = TRUE)
library(knitr)        # file conversion
library(tidyverse)    # data manipulation
library(animint2)     # animated ggplot2
library(kableExtra)   # make tables
cat_pop <- read_csv("meow.csv")
cat_pop
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name)) +
geom_col()
cat_bar <- ggplot() +
geom_col(data = cat_pop, mapping = aes(x = cat_name))
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name))
cat_bar + geom_col()
num_country_plot <- ggplot(data = b5, mapping = aes(x = country)) +
geom_bar() +
coord_flip()
b5 <- read_tsv("b5.tsv")
go_away <- c("race", "age", "engnat", "gender", "hand", "source")
b5c <- b5 |> select(!(go_away))
num_country <- b5c |> count(country, sort = TRUE) |>
filter(!(country == "(nu"))
num_country
num_country_plot <- ggplot(data = b5, mapping = aes(x = country)) +
geom_bar() +
coord_flip()
num_country_plot
#ggsave(filename = "test.pdf", num_country, "pdf", height = 50, width = 50, units = "in", limitsize = FALSE)
test = stat_count(b5$country)
library(animint2)
library(ggplot2)
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name))
cat_bar + geom_col()
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name
y = popularity))
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name,
y = popularity))
cat_bar + geom_col()
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name,
y = popularity))
cat_bar + geom_bar(position = "identity")
cat_bar <- ggplot(data = cat_pop, mapping = aes(y = cat_name,
x = popularity))
cat_bar + geom_bar(position = "identity")
cat_bar <- ggplot(data = cat_pop, mapping = aes(y = cat_name))
cat_bar + geom_bar(position = "identity")
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name))
cat_bar + geom_bar(position = "identity")
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name))
#cat_bar + geom_bar(position = "identity")
cat_bar + geom_col()
cat_bar <- ggplot(data = cat_pop, mapping = aes(x = cat_name)) + geom_col()
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity) + geom_col()
cat_bar
df <- data.frame(trt = c("a", "b", "c"), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(trt, outcome)) +
geom_col()
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity) + geom_col()
animint(cat_bar)
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity) + geom_col()
tests <- animint(cat_bar)
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity)) + geom_col()
detach("package:ggplot2", unload = TRUE)
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity)) + geom_col()
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
knitr::opts_chunk$set(echo = FALSE,
cache = FALSE,
autodep = TRUE)
library(knitr)        # file conversion
#library(tidyverse)    # data manipulation
library(readr)
library(dplyr)
library(animint2)     # animated ggplot2
library(kableExtra)   # make tables
cat_pop <- read_csv("meow.csv")
cat_pop
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity)) + geom_col()
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity)) + geom_bar()
cat_bar
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity)) +
geom_bar(stat = "identity")
cat_bar
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity)) +
geom_bar(stat = "identity")
cat_bar
cat_bar <- ggplot(data = cat_pop,
mapping = aes(cat_name, popularity)) +
geom_bar(stat = "identity")
cat_bar
#| column: margin
cat_pop <- read_csv("meow.csv")
cat_pop
setwd("C:/Users/Chen/Documents/Git Repositories/Ampurr/gsoc/2023")
#| include: FALSE
library(knitr)        # file conversion
library(readr)        # tidyverse file reader
library(dplyr)        # tidyverse file manipulation
library(animint2)     # animated ggplot2
library(kableExtra)   # make tables
b5 <- read_tsv("b5.tsv")
go_away <- c("race", "age", "engnat", "gender", "hand", "source")
b5c <- b5 |> select(!(go_away))
b5 <- read_tsv("b5.tsv")
go_away <- c("race", "age", "engnat", "gender", "hand", "source")
b5c <- b5 |> select(-any_of(go_away))
count_country <- n_distinct(b5c$country)
count_country
num_country <- b5c |> count(country, sort = TRUE) |>
filter(!(country == "(nu"))
num_country
ten_country <- num_country |> slice(1:10)
ten_country <- num_country |> slice(1:10)
ten_country
View(ten_country)
